#########################################################################
# Title:            Community: autoscan                                 #
# Author(s):        maximuskowalski, desimaniac                         #
# URL:              https://github.com/Cloudbox/Community               #
# Docker Image(s):  cloudb0x/autoscan                                   #
# --                                                                    #
#         Part of the Cloudbox project: https://cloudbox.works          #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- name: "Set DNS Record on CloudFlare"
  include_role:
    name: cloudflare-dns
  vars:
    record: autoscan
  when: cloudflare_enabled

- name: Stop and remove any existing container
  docker_container:
    name: autoscan
    state: absent

- name: Create autoscan directories
  file: "path={{ item }} state=directory mode=0775 owner={{ user.name }} group={{ user.name }}"
  with_items:
    - /opt/autoscan

- name: "Check if '/opt/autoscan/config.yml' exists"
  stat:
    path: "/opt/autoscan/config.yml"
  register: config_asconfig

- name: Do the following tasks when 'config.yml' does not exist.
  block:
    - name: Import 'config.json'
    - name: Import autoscan.conf template
      copy:
        src: "config.yml"
        dest: "/opt/autoscan/config.yml"
        owner: "{{ user.name }}"
        group: "{{ user.name }}"
        mode: 0775
        force: no
  when: not config_asconfig.stat.exists

- name: Create and start container
  docker_container:
    name: autoscan
    image: "hotio/autoscan:latest"
    pull: yes
    env:
      TZ: "{{ tz }}"
      PUID: "{{ uid }}"
      PGID: "{{ gid }}"
      DEBUG: "yes"
      AUTOSCAN_VERBOSITY: "3"
      VIRTUAL_HOST: "autoscan.{{ user.domain }}"
      VIRTUAL_PORT: "3030"
      LETSENCRYPT_HOST: "autoscan.{{ user.domain }}"
      LETSENCRYPT_EMAIL: "{{ user.email }}"
      PLEX_LOGIN: "{{ plex.user }}"
      PLEX_PASSWORD: "{{ plex.pass }}"

    volumes:
      - "/opt/autoscan:/config"
      - "/opt/plex:/opt/plex:ro"
      - "/opt/emby:/opt/emby:ro"
      - "/mnt:/mnt:ro"
    labels:
      "com.github.cloudbox.cloudbox_managed": "true"
    networks:
      - name: cloudbox
        aliases:
          - autoscan
    purge_networks: yes
    restart_policy: unless-stopped
    state: started
